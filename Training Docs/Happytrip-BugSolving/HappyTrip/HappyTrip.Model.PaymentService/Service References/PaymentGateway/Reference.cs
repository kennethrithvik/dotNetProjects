//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HappyTrip.Model.PaymentService.PaymentGateway {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/PaymentGateway")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Cvv2NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpiryMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpiryYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNo {
            get {
                return this.CardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNoField, value) != true)) {
                    this.CardNoField = value;
                    this.RaisePropertyChanged("CardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cvv2No {
            get {
                return this.Cvv2NoField;
            }
            set {
                if ((object.ReferenceEquals(this.Cvv2NoField, value) != true)) {
                    this.Cvv2NoField = value;
                    this.RaisePropertyChanged("Cvv2No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpiryMonth {
            get {
                return this.ExpiryMonthField;
            }
            set {
                if ((this.ExpiryMonthField.Equals(value) != true)) {
                    this.ExpiryMonthField = value;
                    this.RaisePropertyChanged("ExpiryMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpiryYear {
            get {
                return this.ExpiryYearField;
            }
            set {
                if ((this.ExpiryYearField.Equals(value) != true)) {
                    this.ExpiryYearField = value;
                    this.RaisePropertyChanged("ExpiryYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentInfo", Namespace="http://schemas.datacontract.org/2004/07/PaymentGateway")]
    [System.SerializableAttribute()]
    public partial class PaymentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HappyTrip.Model.PaymentService.PaymentGateway.PaymentStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNo {
            get {
                return this.ReferenceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNoField, value) != true)) {
                    this.ReferenceNoField = value;
                    this.RaisePropertyChanged("ReferenceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HappyTrip.Model.PaymentService.PaymentGateway.PaymentStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentStatus", Namespace="http://schemas.datacontract.org/2004/07/PaymentGateway")]
    public enum PaymentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCardHolder = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsufficientFunds = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidExpiryDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PaymentGateway")]
    [System.SerializableAttribute()]
    public partial class ServiceExceptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelpURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime WhenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpURL {
            get {
                return this.HelpURLField;
            }
            set {
                if ((object.ReferenceEquals(this.HelpURLField, value) != true)) {
                    this.HelpURLField = value;
                    this.RaisePropertyChanged("HelpURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime When {
            get {
                return this.WhenField;
            }
            set {
                if ((this.WhenField.Equals(value) != true)) {
                    this.WhenField = value;
                    this.RaisePropertyChanged("When");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PaymentGateway.IPaymentService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IPaymentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/VerifyCard", ReplyAction="http://tempuri.org/IPaymentService/VerifyCardResponse")]
        bool VerifyCard(HappyTrip.Model.PaymentService.PaymentGateway.Card CardInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IPaymentService/MakePayment", ReplyAction="http://tempuri.org/IPaymentService/MakePaymentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(HappyTrip.Model.PaymentService.PaymentGateway.ServiceExceptionInfo), Action="http://tempuri.org/IPaymentService/MakePaymentServiceExceptionInfoFault", Name="ServiceExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/PaymentGateway")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        HappyTrip.Model.PaymentService.PaymentGateway.PaymentInfo MakePayment(double amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPaymentServiceChannel : HappyTrip.Model.PaymentService.PaymentGateway.IPaymentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaymentServiceClient : System.ServiceModel.ClientBase<HappyTrip.Model.PaymentService.PaymentGateway.IPaymentService>, HappyTrip.Model.PaymentService.PaymentGateway.IPaymentService {
        
        public PaymentServiceClient() {
        }
        
        public PaymentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaymentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaymentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool VerifyCard(HappyTrip.Model.PaymentService.PaymentGateway.Card CardInfo) {
            return base.Channel.VerifyCard(CardInfo);
        }
        
        public HappyTrip.Model.PaymentService.PaymentGateway.PaymentInfo MakePayment(double amount) {
            return base.Channel.MakePayment(amount);
        }
    }
}
